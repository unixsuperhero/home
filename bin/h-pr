#!/usr/bin/env ruby

require 'json'

require File.join(Dir.home, 'bin', 'h-base.rb')
require File.join(Dir.home, 'bin', 'pr.rb')

o = Hiiro.init(*ARGV)

o.add_subcmd(:edit) { |*args|
  nvim = ENV['EDITOR']
  system(nvim, __FILE__)
}

o.add_subcmd(:breakdown) { |*pr_numbers|
  possible_values = Hash.new { |h, k| h[k] = [] }

  pr_numbers.each do |pr_num|
    puts
    puts "# PR ##{pr_num}"
    puts "==============="

    files = `egrep -l "#{pr_num}" tmp/prs.*.json`.lines(chomp: true).sort

    last_pr = nil
    files.each do |cur_file|
      json = IO.read(cur_file)

      timestamp = cur_file[/\d\d*/]

      prs = Pr.prs_from_json(json) rescue :failed
      next if prs == :failed

      cur_pr = prs[pr_num.to_i]

      if last_pr.nil?
        last_pr = cur_pr

        puts "timestamp: #{timestamp}"
        cur_pr.to_h.each do |k, v|
          puts "#{k} STARTED AT #{v.inspect}"
        end

        puts

        next
      end

      changes = cur_pr.diff(last_pr)
      last_pr = cur_pr

      next if changes.empty?

      puts "timestamp: #{timestamp}"
      changes.each do |k, (old_v, new_v)|
        puts "#{k} CHANGED FROM #{old_v.inspect} TO #{new_v.inspect}"
      end

      puts
    end
  end
}

o.add_subcmd(:history) { |*pr_numbers|
  pr_numbers.each do |pr_num|
    puts
    puts "# PR ##{pr_num}"
    puts "==============="

    files = `egrep -l "#{pr_num}" tmp/prs.*.json`.lines(chomp: true).sort

    last_pr = nil
    files.each do |cur_file|
      json = IO.read(cur_file)

      timestamp = cur_file[/\d\d*/]

      prs = Pr.prs_from_json(json) rescue :failed
      next if prs == :failed

      cur_pr = prs[pr_num.to_i]

      if last_pr.nil?
        last_pr = cur_pr

        puts "timestamp: #{timestamp}"
        cur_pr.to_h.each do |k, v|
          puts "#{k} STARTED AT #{v.inspect}"
        end

        puts

        next
      end

      changes = cur_pr.diff(last_pr)
      last_pr = cur_pr

      next if changes.empty?

      puts "timestamp: #{timestamp}"
      changes.each do |k, (old_v, new_v)|
        puts "#{k} CHANGED FROM #{old_v.inspect} TO #{new_v.inspect}"
      end

      puts
    end
  end
}

binding.pry

o.run

